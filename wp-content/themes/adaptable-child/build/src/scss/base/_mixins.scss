/*
 * Bourbon -> Neat -> Helper
 * Allows us to properly reset margins for child elements
 * When we're creating different column layouts
 */
@mixin omega-reset($nth) {
    &:nth-child(#{$nth}) { margin-right: flex-gutter(); }
    &:nth-child(#{$nth}+1) { clear: none }
}

/**
 * Enables font smoothing in webkit and gecko browsers
 * Stops fonts looking fatter basically in these browsers
 * Currently nothing for trident or edge
 */
@mixin font-smoothing {
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
}

/**
 * Better way to hide screen reader text
 * saves us from the 9999px monitors that will eventually come!
 */
@mixin screen-reader-text{
    position: absolute !important;
    left: 0; // fixes viewport bug in safari
    clip: rect(1px 1px 1px 1px); // IE6, IE7
    clip: rect(1px, 1px, 1px, 1px);
}

/**
 * Modern clearfix
 */
@mixin cf {
    &:before, &:after{
        content:'';
        display: table;
    }
    &:after { clear: both; }
}

/**
 * stops users highlighting objects
 */
@mixin no-select {
    user-select: none;
}

/**
 * Aspect Ratio for images
 * Allows us to keep aspect ratios for images and not get
 * a stretching effect when we need full width/height imagery
 */
@mixin set-ratio($width, $height, $selectors...) {

    // needed on the parent so the absolute childs reference it
    position: relative;

    // create our ratio with the psuedo before
    &:before {
        display: block;
        content: "";
        width: 100%;
        padding: 0 0 percentage($height/$width) 0;
        height: 0;
    }

    // check length of selectors and provide default if non exist
    @if length($selectors) == 0 {
        $selectors: img
    }

    // loop through selectors and create direct descendent selector
    @each $selector in $selectors {
      > #{$selector} {
            z-index: 100;
            position: absolute;
            top: 0;
            right: 0;
            bottom: 0;
            left: 0;
            width: 100%;
            height: 100%;
        }
    }
}



/**
 * Vertically Center element
 * See this post for help with
 * - https://css-tricks.com/centering-in-the-unknown/
 */
@mixin vcenter($rightMargin: -0.25rem, $selectors...) {
    text-align: center;
    white-space: nowrap;
    &:before {
        content: '';
        display: inline-block;
        height: 100%;
        vertical-align: middle;
        margin-right: $rightMargin
    }

    @if length($selectors) == 0 {
        $selectors: div
    }

    @each $selector in $selectors {
        > #{$selector} {
            display: inline-block;
            vertical-align: middle;
        }
    }
}
